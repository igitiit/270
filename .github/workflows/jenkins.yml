name: Trigger Jenkins Pipeline

on:
  push:
    branches:
      - main

jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Get Jenkins Crumb
        run: |
          # Fetch Jenkins crumb if required (some configurations disable CSRF protection)
          CRUMB=$(curl -u jpapadem:11e4a4fb90eddbdeef7f24ed4cfe835924 \
            "https://real-wolves-attack.loca.lt/crumbIssuer/api/json" | jq -r '.crumb' || echo "")

          echo "JENKINS_CRUMB=$CRUMB" >> $GITHUB_ENV

      - name: Trigger Jenkins Build
        run: |
          # Trigger the Jenkins job
          RESPONSE=$(curl -X POST "https://real-wolves-attack.loca.lt/job/job1/build?token=11e4a4fb90eddbdeef7f24ed4cfe835924" \
            -H "Jenkins-Crumb: $JENKINS_CRUMB" -w "%{http_code}" -o /dev/null)
          
          echo "Response Code: $RESPONSE"
          if [ "$RESPONSE" -ne 201 ]; then
            echo "Failed to trigger Jenkins job."
            exit 1
          fi

      - name: Check Jenkins Job Status
        run: |
          # Poll Jenkins job status every 5 seconds, up to 60 seconds
          echo "Waiting for Jenkins job to complete..."
          ATTEMPTS=0
          MAX_ATTEMPTS=12  # 12 * 5 seconds = 60 seconds

          while [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
            JOB_STATUS=$(curl -u jpapadem:11e4a4fb90eddbdeef7f24ed4cfe835924 \
              "https://real-wolves-attack.loca.lt/job/job1/lastBuild/api/json" | jq -r '.result')

            echo "Jenkins Job Status: $JOB_STATUS"

            if [[ "$JOB_STATUS" == "SUCCESS" ]]; then
              echo "Jenkins job completed successfully!"
              exit 0
            elif [[ "$JOB_STATUS" == "FAILURE" ]]; then
              echo "Jenkins job failed!"
              exit 1
            fi

            # Wait and retry
            echo "Job still running... Checking again in 5 seconds."
            sleep 5
            ((ATTEMPTS++))
          done

          echo "Jenkins job did not complete in time."
          exit 1
